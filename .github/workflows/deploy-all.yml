name: Deploy All WaveShift Services

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy-ffmpeg:
    runs-on: ubuntu-latest
    name: Deploy FFmpeg Worker
    defaults:
      run:
        working-directory: ./ffmpeg-worker
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run: git config --global init.defaultBranch main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './ffmpeg-worker/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Generate types
        run: npm run cf-typegen

      - name: TypeScript type check
        run: npx tsc --noEmit

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Container Image
        run: docker build -t ffmpeg-container .
        
      - name: Deploy FFmpeg Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: './ffmpeg-worker'
        env:
          CLOUDFLARE_ACCOUNT_ID: "1298fa35ac940c688dc1b6d8f5eead72"
          R2_BUCKET_NAME: "separate-audio-video"

  deploy-waveshift:
    runs-on: ubuntu-latest
    name: Deploy WaveShift Workflow
    needs: deploy-ffmpeg  # 确保 ffmpeg-worker 先部署
    defaults:
      run:
        working-directory: ./waveshift-workflow
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run: git config --global init.defaultBranch main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './waveshift-workflow/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Generate types
        run: npm run cf-typegen

      - name: TypeScript type check
        run: npx tsc --noEmit
        
      - name: Deploy WaveShift Workflow
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: './waveshift-workflow'
        env:
          CLOUDFLARE_ACCOUNT_ID: "1298fa35ac940c688dc1b6d8f5eead72"
          R2_BUCKET_NAME: "separate-audio-video" 
          R2_PUBLIC_DOMAIN: "separate.waveshift.net"